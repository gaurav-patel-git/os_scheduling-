def avg_wt_time(n, process):
	ans = sorted(sorted(sorted(process, key = lambda x : x[2]),
	                    key = lambda x : x[1]),
	             key = lambda x:x[3])
	# nested sorting first according to arrival time
	# then according to burst time
	# then according to priority
	wt_time = 0
	fin_time = 0
	queue = []
	for i in range(n-1):
		cur_pr = ans[i]
		burst_time = cur_pr[1]
		fin_time += burst_time
		queue.append((cur_pr[0],fin_time))
		wt_time += wt_time + burst_time
	queue.append((ans[-1][0],ans[-1][1]+fin_time))
	print(queue) # printing are queue
	print("Average waiting time is " + str(wt_time//n))

if __name__ == '__main__':
	n = 4
	process = [["p1", 6, 0, 1],
	           ["p2", 8, 0, 2],
	           ["p3", 7, 0, 3],
	           ["p4", 3, 0, 4]]
	# process_name, burst_time, arrival_time, priority
	avg_wt_time(n, process)
